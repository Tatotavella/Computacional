import os
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit


#Pcritica. Calculo de pcritica para distintos tamanos de red. Cada punto tiene 27000 realizaciones y cada realizacion
#se obtiene con 16 divisiones sucesivas del valor de pcritica.
redsize=[4,16,32,64,128]
pcrit=[0.562863,0.587758,0.594091,0.592630,0.592557]
disp=[0.103579,0.044650,0.027715,0.016976,0.009640]
'''
plt.xlabel('Largo de la red')
plt.ylabel('Probabilidad critica')
plt.errorbar(redsize,pcrit,yerr=disp,fmt='*')
plt.show()
#'''

#Funcion F(p). 50 puntos equiespaciados 27000 iteraciones por cada punto de la curva contando veces que percola.
#Codigo de los vectores: t_LARGORED

#Pantallazo general de la funcion
probas=[]
for i in range(50):
	probas.append(i/50.0)

t_8=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000148,0.000185,
0.000407,0.000926,0.002111,0.003333,0.006444,0.010148,0.017296,0.026111,0.042296,0.058815,0.085000,0.121556,0.161037,
0.209926,0.268704,0.331519,0.413407,0.484593,0.561185,0.639963,0.705407,0.777370,0.831148,0.877333,0.916296,0.944444,
0.968815,0.981370,0.988296,0.994815,0.997889,0.999111,0.999815,0.999963,0.999963,1.000000,1.000000,1.000000]

t_4=[0.000000,0.000000,0.000000,0.000000,0.000074,0.000481,0.001000,0.002222,0.004074,0.005963,0.009593,0.013704,0.019741,
0.028852,0.037815,0.051444,0.065296,0.083296,0.105630,0.129407,0.157111,0.187370,0.223185,0.255259,0.294000,0.337111,
0.386889,0.430222,0.485333,0.523630,0.569185,0.627704,0.668704,0.715185,0.753482,0.794481,0.832926,0.864667,0.891778,0.916333,
0.943519,0.958704,0.971000,0.982556,0.990111,0.995519,0.997593,0.999259,0.999889,1.000000]

t_16=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000037,0.000111,0.000037,0.000481,0.002815,0.005519,0.012037,0.023963,0.045815,0.082407,0.139037,0.215259,0.319370,
0.447630,0.558519,0.686963,0.792333,0.871296,0.928593,0.965074,0.982852,0.993630,0.997444,0.999185,0.999778,0.999926,1.000000,1.000000,
1.000000,1.000000,1.000000,1.000000,1.000000,1.000000]
t_32=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000037,0.000593,0.002519,0.011630,0.034370,0.090222,0.200889,0.372963,
0.563370,0.755963,0.885000,0.954000,0.986778,0.996704,0.999148,0.999778,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,
1.000000,1.000000,1.000000,1.000000,1.000000]
t_64=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000148,0.001185,0.013593,0.083630,0.292444,
0.627148,0.885889,0.979370,0.998148,0.999926,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,
1.000000,1.000000,1.000000,1.000000,1.000000]
t_128=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000222,0.010630,0.175148,
0.697519,0.975296,0.999593,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,
1.000000,1.000000,1.000000,1.000000,1.000000]
'''
plt.xlabel('Probabilidad de llenado')
plt.ylabel('Probabilidad de percolar')
plt.plot(probas,t_4,'*')
plt.plot(probas,t_8,'*')
plt.plot(probas,t_16,'*')
plt.plot(probas,t_32,'*')
plt.plot(probas,t_64,'*')
plt.plot(probas,t_128,'*')
plt.show()
#'''
#Detalle fino de la zona cercana al punto critico. En 0.6 +/- 0.05 . 50 puntos
probasFinas=[]
for i in range(50):
	probasFinas.append(0.55+i*0.1/50.0)

t_fino_4=[0.453000,0.456852,0.461370,0.468296,0.478704,0.472111,0.485148,0.486259,0.493370,0.497148,0.501667,0.508444,0.506815,0.510000,
0.517222,0.522704,0.534815,0.535556,0.537148,0.539741,0.545370,0.554333,0.556630,0.560778,0.568741,0.570000,0.580037,0.585259,0.589815,
0.585222,0.595556,0.606222,0.603000,0.614741,0.617593,0.621222,0.619963,0.634926,0.635296,0.643704,0.645296,0.650556,0.652593,0.655815,
0.661852,0.665889,0.672370,0.682593,0.676889,0.685148]
t_fino_8=[0.362741,0.380889,0.386407,0.394593,0.396000,0.410481,0.418222,0.420333,0.432148,0.439778,0.445852,0.455074,0.461926,0.468815,0.474074,
0.485593,0.488741,0.495815,0.505926,0.520407,0.522185,0.535370,0.534741,0.546074,0.555593,0.561741,0.568148,0.576963,0.589037,0.591741,
0.596407,0.606630,0.613593,0.621259,0.630963,0.641556,0.651037,0.647593,0.657741,0.668630,0.676889,0.681074,0.685407,0.698630,0.703630,
0.709222,0.718111,0.726074,0.728778,0.740185]
t_fino_16=[0.267519,0.281259,0.292704,0.299259,0.307556,0.321333,0.326185,0.337593,0.352815,0.361444,0.373407,0.385000,0.401000,0.415333,0.427407,
0.438111,0.450444,0.465037,0.476556,0.491000,0.508037,0.513407,0.529037,0.537778,0.553852,0.558407,0.578407,0.587296,0.598741,0.611000,
0.625519,0.639407,0.652111,0.661667,0.670037,0.681222,0.695630,0.706667,0.717667,0.725667,0.739519,0.750926,0.761778,0.770074,0.778741,
0.791667,0.802259,0.811037,0.819111,0.824593]
t_fino_32=[0.137444,0.148778,0.163370,0.173111,0.188074,0.201222,0.212074,0.228667,0.247037,0.258481,0.276259,0.297259,0.314778,0.333111,0.349926,
0.367926,0.385037,0.409296,0.428963,0.447148,0.463222,0.489519,0.511852,0.529926,0.547481,0.570296,0.592481,0.615630,0.633370,0.645222,
0.667556,0.684037,0.705556,0.722741,0.737704,0.755518,0.766778,0.785519,0.800667,0.813815,0.828741,0.838074,0.850074,0.863889,0.874741,
0.884963,0.893481,0.906778,0.913556,0.918519]
t_fino_64=[0.035704,0.045000,0.051667,0.060111,0.073778,0.080074,0.100000,0.109741,0.127370,0.147111,0.163444,0.189148,0.213037,0.237444,0.269852,
0.293593,0.326407,0.359519,0.392259,0.425667,0.459630,0.491370,0.529222,0.565037,0.591741,0.632630,0.662444,0.691852,0.724296,0.747296,
0.780296,0.803630,0.825852,0.845037,0.867259,0.885593,0.902000,0.912074,0.929037,0.937963,0.947074,0.959074,0.964259,0.969815,0.974259,
0.980407,0.984481,0.985000,0.989185,0.991185]
t_fino_128=[0.002074,0.002630,0.003815,0.006222,0.008111,0.010852,0.014296,0.021667,0.029630,0.038407,0.054407,0.068074,0.093037,0.114630,0.145556,
0.180296,0.218852,0.262741,0.312185,0.369333,0.423037,0.485333,0.537926,0.597815,0.650111,0.703481,0.758852,0.793148,0.833778,0.867111,
0.893148,0.918741,0.937593,0.952482,0.964778,0.975037,0.982407,0.986111,0.991037,0.993593,0.996111,0.997444,0.997667,0.998444,0.999222,
0.999333,0.999741,0.999778,0.999926,0.999963]
'''
plt.xlabel('Probabilidad de llenado')
plt.ylabel('Probabilidad de percolar')
plt.plot(probasFinas,t_fino_4,'*')
plt.plot(probasFinas,t_fino_8,'*')
plt.plot(probasFinas,t_fino_16,'*')
plt.plot(probasFinas,t_fino_32,'*')
plt.plot(probasFinas,t_fino_64,'*')
plt.plot(probasFinas,t_fino_128,'*')
plt.show()
'''
#Numero de fragmentos en funcion del tamano del cluster ns(s). Uso la pcritica del barrido fino por divisiones.
#27000 redes analizadas

#pcrit_4=0.562863
#pcrit_16=0.587758
#pcrit_32=0.594091
#pcrit_64=0.592630
#pcrit_128=0.592557

script_dir = os.path.dirname(__file__) #<-- absolute dir the script is in
rel_path = "Resultados/ns/tam_16.txt"
direc = os.path.join(script_dir, rel_path)
f = open(direc, 'r')
tam_16=[]
ns_16=[]
next(f) #Salteo header
for line in f:
	inter = [x for x in line.split('\t\t')]
	tam_16.append(int(inter[0]))
	ns_16.append(int(inter[1]))
	

'''
tam_16=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,
46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,
90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,
126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,
160,161,162,163,164,165,166,167,168,169,170,171,172,174,178]
ns_16=[162665,42072,26648,18044,12802,9904,7600,6386,5279,4412,4034,3377,2986,2885,2471,2075,2074,1835,1676,1493,1448,1351,1253,1212,1143,1039,
974,914,863,798,790,747,693,665,643,628,578,568,565,560,534,493,508,498,467,457,433,387,392,405,379,384,376,357,374,355,366,332,334,304,
342,307,292,306,298,299,291,307,294,291,320,300,308,286,269,295,273,268,272,269,274,258,262,270,265,268,253,296,231,240,270,255,261,251,
251,221,261,234,235,246,239,236,230,240,240,228,259,235,249,235,225,232,237,195,213,220,226,223,229,188,202,233,220,206,194,201,180,177,
192,196,183,163,178,155,158,153,152,176,139,127,117,105,118,94,113,78,103,90,75,83,57,71,60,41,65,44,32,41,34,34,20,9,10,15,9,13,5,5,1,1,
2,2,3,1]
'''
log_ns_16=[]
log_tam_16=[]
for i in range(len(ns_16)):
	log_ns_16.append(np.log(ns_16[i]))
	log_tam_16.append(np.log(tam_16[i]))


plt.xlabel('Log Tamanos de cluster')
plt.ylabel('Log Ocurrencias')
plt.plot(log_tam_16,log_ns_16,'o')
plt.show()


#64 uso pcrit=0.592630
tam_64=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,
49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,
95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,
131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,
165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,
199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,
233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,
267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,
301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,
335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,
369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,
403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,
437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,
471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,
505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,
539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,
573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,
607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,
641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,
675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,
709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,
743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,
777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,
811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,
845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,
879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,
913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,
947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,
981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,
1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,
1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,
1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,
1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,
1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,
1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,
1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,
1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,
1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,
1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,
1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,
1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,
1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,
1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,
1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,
1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,
1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,
1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,
1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,
1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,
1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,
1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,
1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,
1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,
1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,
1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,
1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,
1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,
1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,
1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,
1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,
1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,
1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,
1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,
1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,
1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,
1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,
2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2033,2034,2035,2036,2037,2038,
2039,2040,2041,2042,2043,2044,2045,2046,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,
2067,2068,2069,2070,2071,2072,2073,2074,2075,2077,2078,2079,2080,2084,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,
2099,2100,2101,2102,2103,2105,2106,2107,2108,2109,2110,2112,2114,2115,2116,2118,2119,2120,2121,2123,2124,2126,2127,2133,2134,2135,2136,
2137,2139,2143,2144,2145,2147,2151,2152,2153,2154,2156,2157,2158,2159,2161,2162,2163,2164,2167,2170,2175,2176,2178,2179,2180,2181,2183,
2186,2187,2194,2196,2204,2206,2207,2209,2211,2214,2219,2224,2226,2228,2229,2231,2234,2240,2247,2249,2250,2260,2296]
ns_64=[1973361,422690,252695,164829,114884,84430,64638,51993,41915,35354,29990,25808,22476,19751,17471,15676,14134,12576,11769,10569,9682,9134,
8325,7607,7181,6639,6295,5822,5543,5090,4980,4576,4395,4127,3917,3823,3643,3468,3326,3255,3060,2900,2756,2647,2568,2419,2333,2344,2277,
2131,2053,2049,1848,1774,1751,1768,1714,1602,1611,1479,1445,1473,1457,1311,1331,1287,1261,1243,1243,1160,1176,1103,1144,1065,1056,1090,
1025,958,939,962,935,905,856,813,831,843,794,803,778,839,750,801,716,717,677,731,716,664,667,688,610,629,628,617,601,616,577,569,552,
571,494,502,479,529,448,483,447,496,451,448,436,472,482,442,416,394,414,434,427,408,408,441,384,384,377,401,368,336,402,386,340,342,331,
355,305,329,308,357,358,310,314,309,321,312,305,283,288,298,281,257,263,251,320,274,275,303,289,253,259,245,248,246,236,236,261,244,259,
208,232,231,229,221,237,208,240,216,196,208,227,233,211,214,211,216,214,217,218,220,198,182,200,167,172,199,184,192,186,175,215,205,174,
167,180,172,193,180,167,156,166,176,166,178,162,168,171,162,173,170,161,160,155,133,154,136,170,142,151,148,129,143,156,122,154,148,153,
132,137,138,145,150,140,145,130,137,149,112,130,131,117,138,140,138,126,124,135,121,143,121,109,102,115,108,125,119,126,122,118,112,106,
129,112,127,101,94,110,103,100,103,113,118,103,104,117,100,99,105,82,91,121,106,91,95,90,104,103,97,96,90,83,95,114,101,111,100,84,83,97,
86,92,106,118,82,72,84,69,81,80,86,98,85,89,92,88,86,89,76,89,97,76,74,80,92,89,71,90,62,83,81,89,68,70,63,85,94,81,76,91,78,80,64,62,87,
68,74,75,68,73,73,62,74,80,68,61,48,72,78,80,63,79,68,67,72,59,76,73,92,85,58,64,64,65,94,71,57,75,62,66,57,65,60,57,74,66,69,72,64,66,69,
50,52,52,63,61,65,52,72,53,48,64,75,67,53,56,58,60,63,46,45,54,59,63,62,58,65,50,55,55,58,51,45,53,39,48,57,48,50,63,51,68,49,56,37,60,43,
44,66,45,44,49,57,59,60,38,49,52,55,51,32,58,40,55,55,45,54,55,51,53,45,52,46,60,52,43,56,51,53,49,41,48,43,42,41,31,44,57,34,46,42,51,43,
38,32,45,33,39,51,48,51,39,32,38,41,42,38,40,38,46,37,34,38,54,51,44,37,48,46,35,39,31,34,25,42,45,50,57,36,49,43,41,45,42,48,42,42,37,46,
35,24,33,32,40,35,29,42,40,38,38,33,32,44,27,39,35,39,53,38,36,28,43,37,36,35,33,29,40,34,36,41,38,38,38,32,43,42,32,35,34,43,34,35,47,29,
37,38,31,38,34,27,30,22,30,35,33,24,38,36,23,27,30,35,36,42,32,32,31,30,38,33,26,37,30,40,35,34,41,35,25,36,30,30,39,34,25,29,34,30,22,37,
31,39,26,27,30,30,38,33,30,33,37,24,31,28,42,36,25,25,24,40,25,31,38,24,23,33,31,46,36,30,29,38,28,36,35,21,29,36,27,34,24,45,35,29,32,36,
37,41,29,36,27,29,42,42,37,27,25,24,36,35,29,32,28,33,20,19,29,29,37,30,26,24,26,30,33,26,28,33,28,25,30,20,24,30,28,45,30,37,23,31,25,39,
21,33,24,43,22,24,26,29,29,23,18,24,25,23,27,27,24,24,19,16,20,27,23,20,21,24,20,32,21,24,34,24,27,24,22,19,24,32,27,26,24,28,27,31,25,22,
23,22,17,28,18,23,20,34,35,22,30,21,29,21,30,28,24,23,21,19,26,15,22,23,24,24,27,32,30,23,26,21,21,29,21,27,30,20,32,24,29,27,29,21,20,26,
24,17,21,35,31,31,23,19,24,24,24,26,20,24,18,13,30,31,24,19,26,28,23,33,25,12,22,19,14,18,28,21,31,28,32,25,22,20,28,28,20,28,20,21,32,25,
30,18,27,26,20,14,26,21,24,22,25,24,28,22,27,21,29,19,18,23,10,28,29,24,29,25,17,28,13,27,23,22,22,33,19,22,17,19,22,21,21,21,24,21,29,25,
21,21,21,20,26,26,18,22,17,25,30,22,22,23,26,21,17,29,36,24,17,23,15,16,25,29,23,18,26,30,24,23,20,22,22,26,19,17,19,22,20,24,16,19,13,16,
19,17,19,22,22,19,25,16,17,14,24,30,20,24,24,21,17,23,16,17,21,21,20,21,27,17,22,15,18,25,26,19,21,24,22,29,20,23,16,28,14,16,15,16,18,30,
20,20,25,17,20,17,19,21,16,23,26,23,27,22,17,14,24,17,25,24,22,19,30,20,25,15,26,25,18,13,24,16,24,20,16,19,23,28,21,21,19,23,18,22,20,20,
19,17,23,15,22,18,18,22,13,17,16,18,19,16,28,21,9,21,14,27,19,18,27,20,18,21,20,20,21,16,16,19,22,25,22,22,20,12,20,19,21,16,28,14,25,23,
24,29,14,16,19,19,20,14,17,23,21,20,29,22,14,25,25,27,18,23,21,17,17,18,21,21,18,16,16,14,17,16,22,19,19,13,19,20,12,19,19,22,12,16,18,23,
23,22,22,14,28,18,28,20,22,24,24,14,15,22,14,16,22,18,24,19,20,19,24,20,22,28,18,20,26,23,16,13,21,18,29,20,24,24,20,21,27,24,15,17,25,21,
18,26,26,25,26,24,30,21,15,23,22,21,15,16,15,18,22,16,18,11,21,23,22,9,21,17,14,26,24,20,20,17,16,28,20,16,18,23,23,15,20,23,20,14,19,15,
19,18,28,26,19,26,16,19,14,19,18,28,16,24,11,25,9,26,31,19,19,14,20,24,21,19,23,22,14,19,21,23,29,25,10,13,12,20,22,25,15,20,22,20,14,20,
22,31,14,22,20,16,17,21,13,20,11,18,19,23,20,25,20,17,20,23,12,22,22,20,16,18,15,18,34,17,23,31,21,20,17,17,26,23,26,21,20,10,24,11,16,10,
11,14,17,14,18,28,28,18,14,23,23,11,16,24,20,16,20,20,15,17,23,19,11,21,12,16,15,17,18,19,29,17,19,21,27,17,13,15,17,16,8,19,14,21,22,11,
20,22,16,23,21,18,27,12,26,24,24,16,21,16,15,16,12,22,23,19,10,17,24,18,19,21,23,22,17,11,20,19,16,18,16,17,19,14,22,14,24,20,23,17,24,20,
20,22,19,23,22,14,19,29,17,16,11,16,17,19,24,12,25,17,14,15,24,15,28,16,15,18,18,26,15,15,20,14,20,19,17,21,16,23,26,12,23,26,13,17,20,10,
12,9,11,19,20,20,25,18,12,17,20,19,21,16,18,17,20,16,21,17,15,14,17,20,23,22,23,22,20,17,16,18,19,17,17,15,22,29,29,21,15,17,13,20,12,17,
11,17,10,8,22,12,21,18,19,17,22,18,14,20,14,17,19,12,22,17,13,12,14,20,19,21,17,21,14,20,16,20,14,21,20,15,16,17,18,17,18,12,18,19,16,17,
14,19,19,17,21,13,15,17,15,18,16,18,24,20,18,13,23,22,25,11,24,16,16,20,10,17,21,15,16,21,16,18,14,13,18,11,14,18,15,17,14,21,14,18,20,17,
22,12,15,16,17,17,17,12,13,15,16,11,15,7,14,18,15,19,10,19,18,17,14,21,15,16,12,12,16,9,14,14,18,18,16,20,10,17,21,17,12,14,23,17,12,15,12,
16,16,7,12,10,14,13,16,12,15,12,12,14,14,21,15,18,12,16,14,22,14,21,19,16,21,17,14,15,14,7,24,8,16,14,18,15,21,8,13,14,15,12,19,14,17,15,
22,17,17,16,19,15,22,16,12,17,11,9,7,16,16,17,10,13,16,12,14,14,9,13,17,13,12,15,14,10,8,20,18,17,22,16,15,12,12,20,17,11,17,9,15,18,12,17,
13,9,16,14,7,18,23,10,16,14,8,16,15,11,11,9,11,19,15,13,14,11,13,14,14,13,13,19,15,15,14,7,13,7,16,9,12,14,14,9,13,10,7,17,17,15,7,15,10,
11,13,9,7,9,11,21,11,14,6,9,9,7,10,6,10,11,9,10,10,18,17,8,17,16,14,12,8,15,13,9,10,13,14,10,14,9,10,7,14,12,7,11,5,2,10,18,11,7,7,13,5,
9,8,6,15,10,10,7,10,10,10,10,12,11,13,6,17,12,4,13,7,13,11,12,5,12,14,15,12,7,11,16,12,8,13,6,10,8,9,10,7,14,13,9,8,10,11,5,14,10,8,9,14,
7,13,6,1,3,6,8,8,11,15,4,12,8,11,6,5,10,6,5,8,7,16,6,11,7,10,9,6,7,13,11,7,9,8,5,10,8,8,7,12,11,8,9,6,10,8,10,7,9,10,3,7,6,8,10,4,5,5,7,
5,5,6,6,8,11,5,3,7,7,7,8,6,3,8,7,2,6,6,8,3,5,3,8,6,5,3,7,4,7,4,5,3,5,6,2,4,5,9,6,7,6,2,4,5,4,7,8,4,2,2,8,3,3,6,7,3,5,3,6,1,5,6,7,3,4,2,
4,6,4,8,5,6,1,1,4,1,2,4,4,4,1,6,4,4,5,3,2,7,6,1,5,4,3,3,3,4,2,2,3,4,4,2,1,1,1,4,1,4,1,3,3,4,3,3,2,3,2,3,2,4,1,2,4,5,1,2,4,2,3,4,1,4,3,1,
2,3,1,1,4,1,3,3,4,2,5,3,1,1,2,1,1,4,4,1,3,2,2,1,5,1,2,3,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,2,2,2,2,1,1,1,2,1,1,2,2,1,1,1,1,1,1,2,1,1,1,1,1,1,
1,1,1,1,1,1,1]
log_ns_64=[]
log_tam_64=[]
for i in range(len(ns_64)):
	log_ns_64.append(np.log(ns_64[i]))
	log_tam_64.append(np.log(tam_64[i]))
'''
plt.xlabel('Log Tamanos de cluster')
plt.ylabel('Log Ocurrencias')
plt.plot(log_tam_64,log_ns_64,'o')
plt.show()
'''

#32 uso pcrit=0.594091
tam_32=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,
49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,
95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,
130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,
198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,
232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,
266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,
300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,
334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,
368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,
402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,
436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,
470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,
504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,
538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,
572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,
606,607,608,609,610,611,612,613,614,615,616,617,618,620,622,623,626,627,642]
ns_32=[530925,121895,73910,49834,35023,25909,20170,16358,13411,11308,9632,8439,7455,6439,5882,5253,4653,4289,4011,3584,3360,3068,2913,2673,2522,
2282,2231,1959,1959,1854,1748,1639,1527,1444,1453,1265,1293,1238,1217,1117,1047,1041,981,967,959,914,919,811,814,799,752,717,719,701,725,
607,631,576,604,623,550,575,529,506,545,527,528,457,464,459,451,444,438,405,403,372,377,374,377,359,347,334,353,331,353,328,322,309,293,
333,279,261,315,281,300,288,272,254,265,286,262,224,224,237,237,243,235,237,216,199,212,194,196,222,203,215,189,170,207,194,203,188,182,
162,187,185,177,176,156,161,173,154,166,158,168,155,142,152,156,154,129,140,140,135,128,139,136,142,129,120,142,142,134,142,147,135,123,
118,121,99,110,140,108,110,115,135,121,132,137,119,131,104,136,127,133,118,114,103,86,115,118,103,89,125,105,94,98,106,113,93,91,89,95,93,
107,105,121,97,93,97,100,80,97,97,93,89,90,85,95,101,102,68,101,87,94,93,93,93,95,83,79,94,84,67,82,96,90,97,102,85,87,71,83,85,86,85,71,
93,76,89,87,84,102,91,88,76,86,82,78,75,75,74,72,73,72,69,80,72,74,72,67,70,72,66,87,67,75,76,88,75,87,77,65,65,74,72,64,65,74,95,71,70,
72,81,76,77,87,77,66,81,74,69,86,58,75,88,69,75,71,65,77,64,77,91,65,61,75,50,66,80,69,69,53,65,75,73,53,61,69,73,76,80,66,62,67,86,77,69,
71,84,71,64,61,65,64,78,61,72,68,60,63,84,69,73,63,64,73,54,79,59,64,82,66,85,69,73,69,63,74,59,87,63,62,60,78,61,81,67,82,62,80,63,73,69,
77,70,63,74,66,73,66,75,76,56,75,62,67,78,53,67,65,66,65,63,67,64,70,94,71,57,56,100,69,67,71,59,76,66,60,51,60,75,76,76,62,76,61,67,57,
75,69,90,72,81,50,78,54,70,68,58,54,82,69,71,71,70,67,70,72,65,80,57,58,75,72,61,52,53,54,54,61,68,57,54,68,58,56,57,60,56,56,52,55,70,66,
55,70,54,50,53,58,49,60,54,68,51,47,53,54,45,49,48,51,57,42,47,60,42,39,48,58,52,46,40,46,56,42,54,53,47,45,38,28,42,37,41,38,46,42,50,
40,39,44,36,42,44,38,29,33,40,37,30,35,27,39,38,34,39,30,29,22,18,29,34,27,43,26,34,13,23,27,18,31,20,24,27,21,28,23,23,22,20,13,20,17,
16,20,20,21,19,18,20,14,16,19,17,14,12,11,11,14,9,24,15,12,16,9,13,7,8,15,10,3,6,7,5,8,5,7,3,5,4,3,3,2,4,2,4,3,3,1,4,2,1,2,1,1,1,1,2,2,2,
3,3,1,1,2,1,2,2,1,1,1,1]
log_ns_32=[]
log_tam_32=[]
for i in range(len(ns_32)):
	log_ns_32.append(np.log(ns_32[i]))
	log_tam_32.append(np.log(tam_32[i]))

'''
plt.xlabel('Log Tamanos de cluster')
plt.ylabel('Log Ocurrencias')
plt.plot(log_tam_32,log_ns_32,'o')
plt.show()
#'''


#Curva P inf. 50 puntos equiespaciados 27000 iteraciones por cada punto de la curva contando la masa	
#del cluster percolante.
#Codigo de los vectores: t_LARGORED

#Pantallazo general de la funcion
probas=[]
for i in range(50):
	probas.append(i/50.0)

pInf_4=[0.000000,0.000000,0.000000,0.000046,0.000046,0.000178,0.000370,0.000590,0.001299,
0.002164,0.003350,0.005178,0.007729,0.011185,0.016125,0.020940,0.027051,0.036356,0.044280,
0.058690,0.074134,0.087949,0.107440,0.128079,0.151009,0.180639,0.207519,0.236424,0.273472,
0.309625,0.346900,0.389516,0.427058,0.468002,0.505743,0.548185,0.593813,0.632162,0.672951,
0.710266,0.745375,0.776979,0.812183,0.840676,0.866852,0.892972,0.915333,0.938674,0.959079,0.980030]

pInf_16=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000000,0.000000,0.000005,0.000028,0.000036,0.000252,0.000488,0.001146,
0.002947,0.006045,0.012312,0.024987,0.044463,0.076925,0.120088,0.181652,0.253856,0.335319,0.418185,
0.494616,0.565348,0.623375,0.670023,0.708279,0.740185,0.767438,0.791792,0.814647,0.836530,0.857992,
0.878766,0.899285,0.919654,0.939985,0.959961,0.979955]

pInf_32=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000004,
0.000020,0.000079,0.000655,0.002156,0.008392,0.023711,0.061862,0.131694,0.234757,0.354883,0.468692,
0.556464,0.620827,0.663482,0.697059,0.725104,0.750180,0.773553,0.795740,0.817337,0.838427,0.859066,
0.879480,0.899858,0.919872,0.939961,0.960021,0.979960]

pInf_64=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000015,0.000297,0.002558,0.019534,0.089062,0.241324,0.420052,0.542373,
0.607526,0.648342,0.679637,0.706433,0.730884,0.753872,0.775860,0.797353,0.818339,0.838940,0.859348,
0.879669,0.899834,0.919911,0.939957,0.960017,0.979992]

pInf_128=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,
0.000000,0.000000,0.000000,0.000000,0.000000,0.000008,0.001819,0.043665,0.263301,0.490513,0.578285,
0.623137,0.656353,0.684218,0.709408,0.732873,0.755135,0.776746,0.797876,0.818664,0.839192,0.859522,
0.879737,0.899835,0.919949,0.939966,0.960004,0.979999]



'''
plt.xlabel('Probabilidad de llenado')
plt.ylabel('P infinito')
plt.plot(probas,pInf_4,'o')
plt.plot(probas,pInf_16,'o')
plt.plot(probas,pInf_32,'o')
plt.plot(probas,pInf_64,'o')
plt.plot(probas,pInf_128,'o')
plt.show()
#'''

#Dimension fractal. Calculo de masa del cluster percolante en pcritica para distintos tamanos de red. Cada punto tiene 27000 realizaciones y cada realizacion
#se obtiene con la pcritica del punto a).
redsize=[4,16,32,64,128]
masasInf=[9.213852,109.244102,405.163635,1441.660034,5288.343262]
disp=[2.275835,26.826820,95.374405,344.041992,1259.488647]
#Grafico la densidad
densidadInf=[]
dispDensidad=[]
for i in range(len(masasInf)):
	densidadInf.append(masasInf[i]/(redsize[i]**2))
	dispDensidad.append(disp[i]/(redsize[i]**2))#Esta bien propagado el error?
'''
plt.xlabel('Largo de la red')
plt.ylabel('Masa del cluster Inf en pc')
plt.errorbar(redsize,masasInf,yerr=disp,fmt='*')
plt.show()
#'''
'''
plt.xlabel('Largo de la red')
plt.ylabel('Densidad del cluster Inf en pc')
plt.errorbar(redsize,densidadInf,yerr=dispDensidad,fmt='*')
plt.show()
#'''

















